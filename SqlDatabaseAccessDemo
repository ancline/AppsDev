using System;
using Microsoft.Data.SqlClient;

namespace SqlDatabaseAccessDemo
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Connecting to SQL Server...");

            string connectionString = @"Data Source=(localdb)\ProjectModels;Initial Catalog=MySampleDB;Integrated Security=True;Connect Timeout=30;Encrypt=False;Trust Server Certificate=True;Application Intent=ReadWrite;Multi Subnet Failover=False;";

            try
            {
                using (SqlConnection connection = new SqlConnection(connectionString))
                {
                    connection.Open();
                    Console.WriteLine("Connection Successful!");

                    // 1. --- Read Data ---
                    Console.WriteLine("\n--- Reading Users ---");
                    string selectSql = "SELECT UserID, FirstName, Email FROM Users ORDER BY FirstName";

                    using (SqlCommand command = new SqlCommand(selectSql, connection))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            if (reader.HasRows)
                            {
                                Console.WriteLine("ID\tFirstName\tEmail");
                                Console.WriteLine("----------------------------------------");

                                while (reader.Read())
                                {
                                    int userId = reader.GetInt32(reader.GetOrdinal("UserID"));
                                    string firstName = reader.GetString(reader.GetOrdinal("FirstName"));
                                    string email = reader.GetString(reader.GetOrdinal("Email"));
                                    Console.WriteLine($"{userId}\t{firstName}\t\t{email}");
                                }
                            }
                            else
                            {
                                Console.WriteLine("No users found.");
                            }
                        }
                    }

                    // 2. --- Insert Data ---
                    Console.WriteLine("\n--- Inserting a New User ---");
                    string newFirstName = "Charlie";
                    string newEmail = "charlie@example.com";

                    string checkSql = "SELECT COUNT(*) FROM Users WHERE Email = @Email";
                    int existingCount = 0;

                    using (SqlCommand checkCommand = new SqlCommand(checkSql, connection))
                    {
                        checkCommand.Parameters.AddWithValue("@Email", newEmail);
                        existingCount = (int)checkCommand.ExecuteScalar();
                    }

                    int newUserId = 0;
                    if (existingCount == 0)
                    {
                        string insertSql = "INSERT INTO Users (FirstName, Email) VALUES (@FirstName, @Email); SELECT SCOPE_IDENTITY();";
                        using (SqlCommand insertCommand = new SqlCommand(insertSql, connection))
                        {
                            insertCommand.Parameters.AddWithValue("@FirstName", newFirstName);
                            insertCommand.Parameters.AddWithValue("@Email", newEmail);

                            object result = insertCommand.ExecuteScalar();
                            if (result != null)
                            {
                                newUserId = Convert.ToInt32(result);
                                Console.WriteLine($"Successfully inserted {newFirstName} with UserID: {newUserId}");
                            }
                            else
                            {
                                Console.WriteLine($"Failed to insert {newFirstName}.");
                            }
                        }
                    }
                    else
                    {
                        Console.WriteLine($"User with email {newEmail} already exists. Skipping insert.");
                    }

                    // 3. --- Verify Insert (Read Data Again) ---
                    Console.WriteLine("\n--- Reading Users After Insert ---");

                    using (SqlCommand command = new SqlCommand(selectSql, connection))
                    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            if (reader.HasRows)
                            {
                                Console.WriteLine("ID\tFirstName\tEmail");
                                Console.WriteLine("----------------------------------------");

                                while (reader.Read())
                                {
                                    Console.WriteLine($"{reader["UserID"]}\t{reader["FirstName"]}\t\t{reader["Email"]}");
                                }
                            }
                            else
                            {
                                Console.WriteLine("No users found.");
                            }
                        }
                    }

                    // Optional DELETE Example:
                    
                    Console.WriteLine("\n--- Deleting Charlie ---");
                    string deleteSql = "DELETE FROM Users WHERE UserID = @UserID";
                    using (SqlCommand deleteCommand = new SqlCommand(deleteSql, connection))
                    {
                        deleteCommand.Parameters.AddWithValue("@UserID", newUserId);
                        int rowsAffected = deleteCommand.ExecuteNonQuery();
                        Console.WriteLine($"Deleted {rowsAffected} row(s).");
                    }
                    
                }
            }
            catch (SqlException ex)
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine($"SQL Error: {ex.Message}");
                Console.ResetColor();
            }
            catch (Exception ex)
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine($"General Error: {ex.Message}");
                Console.ResetColor();
            }

            Console.WriteLine("\nPress any key to exit.");
            Console.ReadKey();
        }
    }
}
